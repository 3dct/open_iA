name: "CodeQL Advanced"

on:
  # manual triggering allowed:
  workflow_dispatch:
  # currently disable any other automatic triggering:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  #schedule:
  #  - cron: '45 15 * * 5'

env:
  BUILD_TYPE: Release
  VTK_BIN_DIR: ${{github.workspace}}/vtk-bin
  ITK_BIN_DIR: ${{github.workspace}}/itk-bin
  OPENIA_BIN_DIR: ${{github.workspace}}/bin
  VTK_CMAKE_OPTIONS: -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_SHARED_LIBS=ON -DVTK_BUILD_EXAMPLES=OFF -DVTK_BUILD_TESTING=OFF -DVTK_LEGACY_REMOVE:BOOL=ON >
    -DVTK_MODULE_ENABLE_VTK_GUISupportQt:STRING=YES -DVTK_MODULE_ENABLE_VTK_GUISupportQtSQL:STRING=NO >
    -DVTK_MODULE_ENABLE_VTK_RenderingQt:STRING=YES -DVTK_MODULE_ENABLE_VTK_ViewsQt:STRING=YES >
    -DVTK_MODULE_ENABLE_VTK_RenderingContextOpenGL2:STRING=YES
    # optional: -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=${VTK_SMP_TYPE}
		# Qt: -DQt6_DIR:PATH=${Qt6_DIR} -DQt6WidgetsTools_DIR:PATH=${Qt6_DIR}WidgetsTools -DQt6CoreTools_DIR:PATH=${Qt6_DIR}CoreTools -DQt6GuiTools_DIR:PATH=${Qt6_DIR}GuiTools
	  # Compiler: -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
  ITK_CMAKE_OPTIONS: -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING:BOOL=OFF >
    -DITK_USE_GPU:BOOL=OFF -DITK_USE_64BITS_IDS:BOOL=ON >
    -DModule_ITKReview:BOOL=ON >-DModule_HigherOrderAccurateGradient:BOOL=ON -DModule_SplitComponents:BOOL=ON >
    -DModule_ITKVtkGlue:BOOL=On -DVTK_DIR:PATH=${{env.VTK_BIN_DIR}}
  OPENIA_CMAKE_OPTIONS: -DITK_DIR=${{github.workspace}}/itk-bin >
    -DModule_CommonImageFilters:BOOL=ON -DModule_FeatureCharacteristics:BOOL=ON -DModule_MetaFilters:BOOL=ON >
    -DModule_Metrics:BOOL=ON -DModule_Segmentation:BOOL=ON -DModule_Surfaces:BOOL=ON >
    -DModule_4DCT:BOOL=ON -DModule_BoneThickness:BOOL=ON -DModule_CompVis:BOOL=ON -DModule_DynamicVolumeLines:BOOL=ON -DModule_ElastixRegistration:BOOL=ON >
    -DModule_FeatureAnalyzer:BOOL=ON -DModule_FeatureAnalyzerComputation:BOOL=ON -DModule_FeatureScout:BOOL=ON -DModule_FiAKEr:BOOL=ON >
    -DModule_FilterPreview:BOOL=ON -DModule_FoamCharacterization:BOOL=ON -DModule_FuzzyFeatureTracking:BOOL=ON -DModule_GEMSe:BOOL=ON >
    -DModule_InSpectr:BOOL=ON -DModule_Labelling:BOOL=ON -DModule_NModalTF:BOOL=ON -DModule_Remote:BOOL=ON -DModule_TripleHistogramTF:BOOL=ON >
    -DModule_Uncertainty:BOOL=ON -DModule_VolumePlayer:BOOL=ON

jobs:
# cannot do as separate job - then it would not be accessible (unless via artifacts)
#  build_vtk:
#    name: Build VTK
#    runs-on: ${{ matrix.os }}
#    strategy:
#        matrix:
#            os: [windows-latest, macOS-13, macOS-14]
#    steps:
  analyze:
    name: Analyze (${{ matrix.language }})
    # needs: [build_vtk]
    runs-on: 'ubuntu-latest'
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual
        - language: javascript-typescript
          build-mode: none
    steps:

    - name: Qt install
      # see https://github.com/marketplace/actions/install-qt for details
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'
        modules: 'qtcharts qthttpserver qtwebsockets'
        setup-python: false

    ##################################################################
    # VTK
    - name: VTK download
      uses: suisei-cn/actions-download-file@v1.6.0
      with:
        url: https://vtk.org/files/release/9.4/VTK-9.4.1.tar.gz
        target: ${{github.workspace}}/vtk-src

    - name: VTK extract
      run: |
          tar -xvzf VTK-9.4.1.tar.gz
    
    #- name: VTK create install folder
    #  run: |
    #      mkdir -p ${{github.workspace}}/vtkinst

    - name: VTK install dependencies (Linux)
      run: sudo apt update && sudo apt install libopenmpi-dev libopengl-dev libglx-dev libglw-dev
      if: runner.os == 'Linux'

    - name: VTK cmake configure
      #  -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/vtkinst
      run: cmake -B ${{env.VTK_BIN_DIR}} ${{env.VTK_CMAKE_OPTIONS}} vtk-src/VTK-9.4.1

    - name: VTK build
      run: cmake --build ${{env.VTK_BIN_DIR}} --config ${{env.BUILD_TYPE}}
      # -j ${{inputs.threads}}

    #- name: VTK install
    #  working-directory: ${{github.workspace}}/vtk-bin
    #  run: cmake --install ${{github.workspace}}/vtk-bin --config ${{env.BUILD_TYPE}}

    ##################################################################
    # ITK

    - name: ITK download
      uses: suisei-cn/actions-download-file@v1.6.0
      with:
        url: https://github.com/InsightSoftwareConsortium/ITK/releases/download/v5.4.0/InsightToolkit-5.4.0.tar.gz
        target: ${{github.workspace}}/itk-src

    - name: ITK extract
      run: |
          tar -xvzf InsightToolkit-5.4.0.tar.gz

    - name: ITK cmake configure
      run: cmake -B ${{env.ITK_BIN_DIR}} ${{env.ITK_CMAKE_OPTIONS}} itk-src/InsightToolkit-5.4.0

    - name: ITK build
      run: cmake --build ${{env.ITK_BIN_DIR}} --config ${{env.BUILD_TYPE}}
      # -j ${{inputs.threads}}
    
    ##################################################################
    # open_iA

    - name: Checkout open_iA
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        dependency-caching: true

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        cmake -B ${{env.OPENIA_BIN_DIR}} ${{env.OPENIA_CMAKE_OPTIONS}} .
        cmake --build ${{env.OPENIA_BIN_DIR}} --config ${{env.BUILD_TYPE}}
        #exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
