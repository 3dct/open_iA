/*************************************  open_iA  ************************************ *
* **********  A tool for scientific visualisation and 3D image processing  ********** *
* *********************************************************************************** *
* Copyright (C) 2016-2017  C. Heinzl, M. Reiter, A. Reh, W. Li, M. Arikan,            *
*                          J. Weissenböck, Artem & Alexander Amirkhanov, B. Fröhler   *
* *********************************************************************************** *
* This program is free software: you can redistribute it and/or modify it under the   *
* terms of the GNU General Public License as published by the Free Software           *
* Foundation, either version 3 of the License, or (at your option) any later version. *
*                                                                                     *
* This program is distributed in the hope that it will be useful, but WITHOUT ANY     *
* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A     *
* PARTICULAR PURPOSE.  See the GNU General Public License for more details.           *
*                                                                                     *
* You should have received a copy of the GNU General Public License along with this   *
* program.  If not, see http://www.gnu.org/licenses/                                  *
* *********************************************************************************** *
* Contact: FH OÖ Forschungs & Entwicklungs GmbH, Campus Wels, CT-Gruppe,              *
*          Stelzhamerstraße 23, 4600 Wels / Austria, Email: c.heinzl@fh-wels.at       *
* ************************************************************************************/
#pragma once

#ifdef USE_PRECOMPILED_HEADERS
// #pragma message("Using pre-compiled headers\n")

#ifdef _MSC_VER
// need to do that very early, otherwise some itk header will include it,
// but in some other way so that "GetConsoleWindow" is not defined
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#endif

// ITK
#include <itkAdaptiveHistogramEqualizationImageFilter.h>
#include <itkAffineTransform.h>
#include <itkAnisotropicDiffusionFunction.h>
#include <itkAnisotropicDiffusionImageFilter.h>
#include <itkArray.h>
#include <itkArray2D.h>
#include <itkAutoPointer.h>
#include <itkBinaryBallStructuringElement.h>
#include <itkBinaryErodeImageFilter.h>
#include <itkBinaryFunctorImageFilter.h>
#include <itkBinaryMorphologyImageFilter.h>
#include <itkBinaryThresholdImageFilter.h>
#include <itkBoundingBox.h>
#include <itkCastImageFilter.h>
#include <itkCellInterface.h>
#include <itkCellInterfaceVisitor.h>
#include <itkChangeInformationImageFilter.h>
#include <itkCommand.h>
#include <itkConceptChecking.h>
#include <itkConditionalConstIterator.h>
#include <itkConnectedComponentImageFilter.h>
#include <itkConstantBoundaryCondition.h>
#include <itkConstNeighborhoodIterator.h>
#include <itkConstShapedNeighborhoodIterator.h>
#include <itkConstSliceIterator.h>
#include <itkContinuousIndex.h>
#include <itkCostFunction.h>
#include <itkCovariantVector.h>
#include <itkCreateObjectFunction.h>
#include <itkCurvatureAnisotropicDiffusionImageFilter.h>
#include <itkCurvatureNDAnisotropicDiffusionFunction.h>
#include <itkDataObject.h>
#include <itkDataObjectDecorator.h>
#include <itkDecisionRule.h>
#include <itkDefaultPixelAccessor.h>
#include <itkDefaultPixelAccessorFunctor.h>
#include <itkDefaultStaticMeshTraits.h>
#include <itkDefaultVectorPixelAccessor.h>
#include <itkDefaultVectorPixelAccessorFunctor.h>
#include <itkDenseFiniteDifferenceImageFilter.h>
#include <itkDerivativeImageFilter.h>
#include <itkDerivativeOperator.h>
#include <itkDiscreteGaussianImageFilter.h>
#include <itkEllipsoidInteriorExteriorSpatialFunction.h>
#include <itkEquivalencyTable.h>
#include <itkEuler3DTransform.h>
#include <itkEventObject.h>
#include <itkExceptionObject.h>
#include <itkExtractImageFilter.h>
#include <itkExtractImageFilterRegionCopier.h>
#include <itkFastMutexLock.h>
#include <itkFiniteDifferenceFunction.h>
#include <itkFiniteDifferenceImageFilter.h>
#include <itkFixedArray.h>
#include <itkFloodFilledFunctionConditionalConstIterator.h>
#include <itkFloodFilledSpatialFunctionConditionalConstIterator.h>
#include <itkFloodFilledSpatialFunctionConditionalIterator.h>
#include <itkFunctionBase.h>
#include <itkGaussianOperator.h>
#include <itkGDCMImageIO.h>
#include <itkGDCMSeriesFileNames.h>
#include <itkGradientAnisotropicDiffusionImageFilter.h>
#include <itkGradientMagnitudeImageFilter.h>
#include <itkGradientNDAnisotropicDiffusionFunction.h>
#include <itkGradientRecursiveGaussianImageFilter.h>
#include <itkHistogram.h>
#include <itkIdentityTransform.h>
#include <itkImage.h>
#include <itkImageAdaptor.h>
#include <itkImageBase.h>
#include <itkImageBoundaryCondition.h>
#include <itkImageConstIterator.h>
#include <itkImageConstIteratorWithIndex.h>
#include <itkImageDuplicator.h>
#include <itkImageFileReader.h>
#include <itkImageFileWriter.h>
#include <itkImageFunction.h>
#include <itkImageHelper.h>
#include <itkImageIOBase.h>
#include <itkImageIOFactory.h>
#include <itkImageIORegion.h>
#include <itkImageIterator.h>
#include <itkImageIteratorWithIndex.h>
#include <itkImageLinearConstIteratorWithIndex.h>
#include <itkImageLinearIteratorWithIndex.h>
#include <itkImageRandomNonRepeatingConstIteratorWithIndex.h>
#include <itkImageRegion.h>
#include <itkImageRegionConstIterator.h>
#include <itkImageRegionConstIteratorWithIndex.h>
#include <itkImageRegionIterator.h>
#include <itkImageRegionIteratorWithIndex.h>
#include <itkImageSeriesReader.h>
#include <itkImageSeriesWriter.h>
#include <itkImageSliceConstIteratorWithIndex.h>
#include <itkImageSource.h>
#include <itkImageToHistogramFilter.h>
#include <itkImageToImageFilter.h>
#include <itkImageToImageFilterDetail.h>
#include <itkImageToImageMetric.h>
#include <itkImageTransformHelper.h>
#include <itkImportImageContainer.h>
#include <itkIndent.h>
#include <itkIndex.h>
#include <itkInPlaceImageFilter.h>
#include <itkInteriorExteriorSpatialFunction.h>
#include <itkInterpolateImageFunction.h>
#include <itkIntTypes.h>
#include <itkKdTree.h>
#include <itkKernelFunctionBase.h>
#include <itkLaplacianImageFilter.h>
#include <itkLaplacianSegmentationLevelSetFunction.h>
#include <itkLightObject.h>
#include <itkLightProcessObject.h>
#include <itkLinearInterpolateImageFunction.h>
#include <itkLineCell.h>
#include <itkListSample.h>
#include <itkMacro.h>
#include <itkMapContainer.h>
#include <itkMath.h>
#include <itkMathDetail.h>
#include <itkMatrix.h>
#include <itkMatrixOffsetTransformBase.h>
#include <itkMaximumDecisionRule.h>
#include <itkMeasurementVectorTraits.h>
#include <itkMembershipFunctionBase.h>
#include <itkMesh.h>
#include <itkMetaDataDictionary.h>
#include <itkMetaDataObjectBase.h>
#include <itkMinimumMaximumImageCalculator.h>
#include <itkMultipleValuedCostFunction.h>
#include <itkMultiResolutionPyramidImageFilter.h>
#include <itkMultiThreader.h>
#include <itkMutexLock.h>
#include <itkNeighborhood.h>
#include <itkNeighborhoodAccessorFunctor.h>
#include <itkNeighborhoodAlgorithm.h>
#include <itkNeighborhoodAllocator.h>
#include <itkNeighborhoodInnerProduct.h>
#include <itkNeighborhoodIterator.h>
#include <itkNeighborhoodOperator.h>
#include <itkNeighborhoodOperatorImageFilter.h>
#include <itkNonLinearOptimizer.h>
#include <itkNormalizeImageFilter.h>
#include <itkNrrdImageIO.h>
#include <itkNumericTraits.h>
#include <itkNumericTraitsCovariantVectorPixel.h>
#include <itkNumericTraitsFixedArrayPixel.h>
#include <itkNumericTraitsRGBPixel.h>
#include <itkNumericTraitsTensorPixel.h>
#include <itkNumericTraitsVariableLengthVectorPixel.h>
#include <itkNumericTraitsVectorPixel.h>
#include <itkObject.h>
#include <itkObjectFactory.h>
#include <itkObjectFactoryBase.h>
#include <itkOffset.h>
#include <itkOneWayEquivalencyTable.h>
#include <itkOptimizer.h>
#include <itkOtsuThresholdCalculator.h>
#include <itkOtsuThresholdImageFilter.h>
#include <itkOutputWindow.h>
#include <itkPixelTraits.h>
#include <itkPoint.h>
#include <itkPointSet.h>
#include <itkPointSetToImageFilter.h>
#include <itkPointSetToImageMetric.h>
#include <itkPointSetToImageRegistrationMethod.h>
#include <itkPointSetToPointSetMetric.h>
#include <itkProcessObject.h>
#include <itkProgressAccumulator.h>
#include <itkProgressReporter.h>
#include <itkRawImageIO.h>
#include <itkRecursiveGaussianImageFilter.h>
#include <itkRecursiveSeparableImageFilter.h>
#include <itkRegion.h>
#include <itkRegionOfInterestImageFilter.h>
#include <itkRegularStepGradientDescentBaseOptimizer.h>
#include <itkRegularStepGradientDescentOptimizer.h>
#include <itkRelabelComponentImageFilter.h>
#include <itkResampleImageFilter.h>
#include <itkRescaleIntensityImageFilter.h>
#include <itkRGBAPixel.h>
#include <itkRGBPixel.h>
#include <itkRigid3DTransform.h>
#include <itkSample.h>
#include <itkScalableAffineTransform.h>
#include <itkScalarAnisotropicDiffusionFunction.h>
#include <itkScalarImageKmeansImageFilter.h>
#include <itkShapedNeighborhoodIterator.h>
#include <itkShrinkImageFilter.h>
#include <itkSignedMaurerDistanceMapImageFilter.h>
#include <itkSimpleDataObjectDecorator.h>
#include <itkSimpleFastMutexLock.h>
#include <itkSingleValuedCostFunction.h>
#include <itkSingleValuedNonLinearOptimizer.h>
#include <itkSize.h>
#include <itkSliceIterator.h>
#include <itkSmartPointer.h>
#include <itkSmartPointerForwardReference.h>
#include <itkSpatialFunction.h>
#include <itkSpatialObject.h>
#include <itkSpatialOrientation.h>
#include <itkSpecialCoordinatesImage.h>
#include <itkStatisticsAlgorithm.h>
#include <itkStreamingImageFilter.h>
#include <itkSubsample.h>
#include <itkSymmetricEigenAnalysis.h>
#include <itkSymmetricSecondRankTensor.h>
#include <itksys/hash_map.hxx>
#include <itkTimeStamp.h>
#include <itkTransform.h>
#include <itkTransformBase.h>
#include <itkTransformMeshFilter.h>
#include <itkUnaryFunctorImageFilter.h>
#include <itkVariableLengthVector.h>
#include <itkVariableSizeMatrix.h>
#include <itkVector.h>
#include <itkVectorContainer.h>
#include <itkVectorImage.h>
#include <itkVectorImageNeighborhoodAccessorFunctor.h>
#include <itkVectorIndexSelectionCastImageFilter.h>
#include <itkVersor.h>
#include <itkVersorRigid3DTransformOptimizer.h>
#include <itkVersorTransform.h>
#include <itkVTKImageExport.h>
#include <itkVTKImageExportBase.h>
#include <itkVTKImageImport.h>
#include <itkWatershedBoundary.h>
#include <itkWatershedImageFilter.h>
#include <itkWatershedSegmenter.h>
#include <itkWatershedSegmentTable.h>
#include <itkWatershedSegmentTree.h>
#include <itkWeakPointer.h>
#include <itkWindowedSincInterpolateImageFunction.h>
#include <itkWindows.h>
#include <itkZeroCrossingImageFilter.h>
#include <itkZeroFluxNeumannBoundaryCondition.h>

// VTK
#include <QVTKInteractor.h>
#include <QVTKInteractorAdapter.h>
#include <QVTKWidget.h>
#include <QVTKWidget2.h>
#include <vtkABI.h>
#include <vtkAbstractArray.h>
#include <vtkAbstractTransform.h>
#include <vtkActor.h>
#include <vtkActor2D.h>
#include <vtkActorCollection.h>
#include <vtkAlgorithm.h>
#include <vtkAlgorithmOutput.h>
#include <vtkAppendPolyData.h>
#include <vtkArrowSource.h>
#include <vtkAxisActor2D.h>
#include <vtkBMPReader.h>
#include <vtkBMPWriter.h>
#include <vtkBorderRepresentation.h>
#include <vtkCallbackCommand.h>
#include <vtkCamera.h>
#include <vtkCellArray.h>
#include <vtkCellData.h>
#include <vtkCellType.h>
#include <vtkChart.h>
#include <vtkChartXY.h>
#include <vtkCollection.h>
#include <vtkColorTransferFunction.h>
#include <vtkCommand.h>
#include <vtkConeSource.h>
#include <vtkContextScene.h>
#include <vtkContextView.h>
#include <vtkContourFilter.h>
#include <vtkContourValues.h>
#include <vtkCoordinate.h>
#include <vtkDataArray.h>
#include <vtkDataArrayTemplate.h>
#include <vtkDataObjectCollection.h>
#include <vtkDataSet.h>
#include <vtkDataSetAttributes.h>
#include <vtkDataSetCollection.h>
#include <vtkDataSetMapper.h>
#include <vtkDiscretizableColorTransferFunction.h>
#include <vtkDiskSource.h>
#include <vtkDoubleArray.h>
#include <vtkEdgeListIterator.h>
#include <vtkEvent.h>
#include <vtkFieldData.h>
#include <vtkFloatArray.h>
#include <vtkFollower.h>
#include <vtkGenericMovieWriter.h>
#include <vtkGenericOpenGLRenderWindow.h>
#include <vtkGlyph2D.h>
#include <vtkGlyphSource2D.h>
#include <vtkGraphItem.h>
#include <vtkHomogeneousTransform.h>
#include <vtkIdList.h>
#include <vtkIdTypeArray.h>
#include <vtkImageAccumulate.h>
#include <vtkImageActor.h>
#include <vtkImageAlgorithm.h>
#include <vtkImageBlend.h>
#include <vtkImageCanvasSource2D.h>
#include <vtkImageCast.h>
#include <vtkImageChangeInformation.h>
#include <vtkImageData.h>
#include <vtkImageExport.h>
#include <vtkImageImport.h>
#include <vtkImageMapper3D.h>
#include <vtkImageMapToColors.h>
#include <vtkImageMapToWindowLevelColors.h>
#include <vtkImageResample.h>
#include <vtkImageReslice.h>
#include <vtkImplicitFunction.h>
#include <vtkIndent.h>
#include <vtkIntArray.h>
#include <vtkInteractorStyleImage.h>
#include <vtkIOStream.h>
#include <vtkJPEGReader.h>
#include <vtkJPEGWriter.h>
#include <vtkLegendBoxActor.h>
#include <vtkLinearTransform.h>
#include <vtkLineSource.h>
#include <vtkLogoRepresentation.h>
#include <vtkLogoWidget.h>
#include <vtkLookupTable.h>
#include <vtkMarchingContourFilter.h>
#include <vtkMath.h>
#include <vtkMatrix4x4.h>
#include <vtkMatrixToLinearTransform.h>
#include <vtkMetaImageReader.h>
#include <vtkMetaImageWriter.h>
#include <vtkObject.h>
#include <vtkObjectBase.h>
#include <vtkObjectFactory.h>
#include <vtkOpenGLPolyDataMapper.h>
#include <vtkOStreamWrapper.h>
#include <vtkOStrStreamWrapper.h>
#include <vtkParametricFunction.h>
#include <vtkParametricFunctionSource.h>
#include <vtkParametricSpline.h>
#include <vtkPiecewiseFunction.h>
#include <vtkPlane.h>
#include <vtkPlanes.h>
#include <vtkPlaneSource.h>
#include <vtkPlot.h>
#include <vtkPNGReader.h>
#include <vtkPNGWriter.h>
#include <vtkPointData.h>
#include <vtkPointPicker.h>
#include <vtkPoints.h>
#include <vtkPointSet.h>
#include <vtkPolyData.h>
#include <vtkPolyDataAlgorithm.h>
#include <vtkPolyDataMapper.h>
#include <vtkPolyDataMapper2D.h>
#include <vtkPolyLine.h>
#include <vtkPolynomialSolversUnivariate.h>
#include <vtkProp.h>
#include <vtkProp3D.h>
#include <vtkPropCollection.h>
#include <vtkProperty.h>
#include <vtkProperty2D.h>
#include <vtkQuad.h>
#include <vtkQImageToImageSource.h>
#include <vtkRenderer.h>
#include <vtkRendererCollection.h>
#include <vtkRenderWindow.h>
#include <vtkRenderWindowInteractor.h>
#include <vtkScalarsToColors.h>
#include <vtkScalarBarActor.h>
#include <vtkScalarBarRepresentation.h>
#include <vtkScalarBarWidget.h>
#include <vtkSelection.h>
#include <vtkSetGet.h>
#include <vtkSmartPointer.h>
#include <vtkSmartPointerBase.h>
#include <vtkStdString.h>
#include <vtkSTLReader.h>
#include <vtkSTLWriter.h>
#include <vtkStringArray.h>
#include <vtkStructuredData.h>
#include <vtkSystemIncludes.h>
#include <vtkTable.h>
#include <vtkTextActor.h>
#include <vtkTextMapper.h>
#include <vtkTextProperty.h>
#include <vtkTexture.h>
#include <vtkTIFFReader.h>
#include <vtkTIFFWriter.h>
#include <vtkTimeStamp.h>
#include <vtkTimerLog.h>
#include <vtkTransform.h>
#include <vtkTubeFilter.h>
#include <vtkType.h>
#include <vtkUnicodeString.h>
#include <vtkUnsignedCharArray.h>
#include <vtkVariant.h>
#include <vtkVersion.h>
#include <vtkVertexListIterator.h>
#include <vtkViewport.h>
#include <vtkWidgetCallbackMapper.h>
#include <vtkWidgetEvent.h>
#include <vtkWindow.h>
#include <vtkWindowToImageFilter.h>

// QT
#include <QAction>
#include <QAbstractTextDocumentLayout>
#include <QApplication>
#include <QBrush>
#include <QButtonGroup>
#include <QCheckBox>
#include <QColor>
#include <QColorDialog>
#include <QComboBox>
#include <QDate>
#include <QDateTime>
#include <QDebug>
#include <QDesktopWidget>
#include <QDialog>
#include <QDialogButtonBox>
#include <QDir>
#include <QDockWidget>
#include <QDoubleSpinBox>
#include <QErrorMessage>
#include <QFile>
#include <QFileDialog>
#include <QFileInfo>
#include <QFrame>
#include <QGLBuffer>
#include <QGridLayout>
#include <QHBoxLayout>
#include <QHeaderView>
#include <QIcon>
#include <QImage>
#include <QKeyEvent>
#include <QLabel>
#include <QLinearGradient>
#include <QLineEdit>
#include <QList>
#include <QListWidget>
#include <QLocale>
#include <QMainWindow>
#include <QMap>
#include <QMdiArea>
#include <QMdiSubWindow>
#include <QMenu>
#include <QMenuBar>
#include <QMessageBox>
#include <QMouseEvent>
#include <QMutex>
#include <QObject>
#include <QPainter>
#include <QPen>
#include <QPoint>
#include <QPointF>
#include <QPolygon>
#include <QProgressBar>
#include <QPropertyAnimation>
#include <QPushButton>
#include <QScrollArea>
#include <QSettings>
#include <QSignalMapper>
#include <QSpacerItem>
#include <QSpinBox>
#include <QSplashScreen>
#include <QSplitter>
#include <QStackedWidget>
#include <QStandardItemModel>
#include <QStatusBar>
#include <QString>
#include <QStringList>
#include <QTableWidget>
#include <QTabWidget>
#include <QTextDocument>
#include <QTextEdit>
#include <QTextStream>
#include <QtGui>
#include <QThread>
#include <QTime>
#include <QTimer>
#include <QToolBar>
#include <QToolTip>
#include <QTreeWidget>
#include <QtWidgets>
#include <QtXml/QDomDocument>
#include <QtXml/QDomNode>
#include <QVariant>
#include <QVBoxLayout>
#include <QWaitCondition>
#include <QWheelEvent>
#include <QWidget>
#include <QXmlStreamReader>
#include <QXmlStreamWriter>

 // Standard library includes
#include <algorithm>
#include <cassert>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <memory>
#include <ostream>
#include <set>
#include <sstream>
#include <string>
#include <vector>

#endif	// USE_PRECOMPILED_HEADERS
