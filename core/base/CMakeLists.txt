FILE( GLOB_RECURSE open_iA_base_SRCS "*.cpp" "*.h" )

SET (LIB_TYPE SHARED)
SET (BASE_LIBRARY_NAME base)

# Generate core dll file / shared object:
add_library(${BASE_LIBRARY_NAME} ${LIB_TYPE} ${open_iA_base_SRCS} )

TARGET_LINK_LIBRARIES(${BASE_LIBRARY_NAME} PUBLIC ${QT_LIBRARIES} ${VTK_LIBRARIES} ${ITK_LIBRARIES})

INCLUDE(Modules)
MODULE_GENERATE_EXPORT_HEADER ( ${BASE_LIBRARY_NAME} )

if (VTK_MAJOR_VERSION GREATER 8)
	vtk_module_autoinit(TARGETS ${BASE_LIBRARY_NAME} MODULES ${VTK_LIBRARIES})
endif()

IF (openiA_PRECOMPILE)
	IF (CMAKE_MAJOR_VERSION GREATER 4 OR
	(CMAKE_MAJOR_VERSION EQUAL 3 AND CMAKE_MINOR_VERSION GREATER 15))
		INCLUDE(precompile.cmake)
		target_precompile_headers(${BASE_LIBRARY_NAME} PRIVATE ${OPENIA_PRECOMPILE_HEADERS})
	ENDIF()
ENDIF()

# ${CMAKE_CURRENT_SOURCE_DIR}/src 
TARGET_INCLUDE_DIRECTORIES(${BASE_LIBRARY_NAME} PUBLIC ${CMAKE_CURRENT_BINARY_DIR}) # for export header

IF (openiA_USE_IDE_FOLDERS)
	SET_PROPERTY(TARGET ${BASE_LIBRARY_NAME} PROPERTY FOLDER "Libraries")
ENDIF()